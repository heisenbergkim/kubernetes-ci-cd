def mytag = 'UNKNOWN'

pipeline {
    agent any

   
    checkout scm

    env.DOCKER_API_VERSION="1.23"
    
    sh "git rev-parse --short HEAD > commit-id"

    tag = readFile('commit-id').replace("\n", "").replace("\r", "")
    mytag="${tag}"
    env.TAG=mytag
    

    environment {
        TAG     = mytag

    }

    appName = "my-app"
    registryHost = "127.0.0.1:30400/"
    imageName = "${registryHost}${appName}:${tag}"
    env.BUILDIMG=imageName

    

    

    env.BUILD_TAG=mytag

  
    

 
    
     


    stage("Build") {
            steps {
                script {
                    sh "docker build -t ${imageName} applications/hello-eric"
                }
            }
        }

        stage("Push") {
            steps {
                echo "env.BAR is '${BAR}'" // prints: env.BAR is 'bar'
                echo "FOO is '${FOO}'" // prints: FOO is 'initial FOO env value'
                echo "env.FOO is '${env.FOO}'" // prints: env.FOO is 'initial FOO env value'
                script {
                    sh "docker push ${imageName}"
                }
            }
        }

        stage("Deploy") {
            steps {
                echo "FOO is '${FOO}'" // prints: FOO is 'test2'
                echo "env.FOO is '${env.FOO}'" // prints: env.FOO is 'initial FOO env value'
                echo "env.BAR is '${BAR}'" // prints: env.BAR is 'bar2'

                script {
                    sh "sed 's#__IMAGE__#'${mytag}'#' applications/hello-eric/k8s/deployment.yaml | kubectl apply -f -"
                }

                echo "FOO is '${FOO}'" // prints: FOO is 'test3'
            }
        }

  


    
}